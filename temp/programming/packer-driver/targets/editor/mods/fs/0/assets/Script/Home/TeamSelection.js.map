{"version":3,"sources":["file:///Users/chandan/aGOD/assets/Script/Home/TeamSelection.ts"],"names":["_decorator","Component","Node","Prefab","CCInteger","instantiate","UITransform","Input","input","Sprite","v2","Vec3","Intersection2D","TeamManager","ccclass","property","TeamSelection","type","start","startXpos","node","getComponent","width","startYpos","height","tempNode","i","j","DragonSelectionPrefab","addChild","setPosition","DragonPositionNode","push","setUpDragons","setTouchEvents","dragons","getInstance","getDragonImages","DragableNode","DragonsPrefab","active","length","DragonsParent","spriteFrame","backButton","event","on","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","getBoundingBoxToWorld","contains","getUILocation","x","y","current","convertToNodeSpaceAR","parent","targetDragon","dragonMove","planevalidMoveCheck","colide","rectRect","getChildByName","pos","getPosition"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,W,OAAAA,W;AAA0BC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,K,OAAAA,K;AAAoBC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,E,OAAAA,E;AAAiBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,c,OAAAA,c;;AACjJC,MAAAA,W,iBAAAA,W;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBf,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;+BAGagB,a,WADZF,OAAO,CAAC,eAAD,C,UAIHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAGb;AAAR,OAAD,C,UAGRW,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAGd;AAAR,OAAD,C,UAGRY,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAGd;AAAR,OAAD,C,UAGRY,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAGf;AAAR,OAAD,C,oCAbb,MACac,aADb,SACmCf,SADnC,CAEA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,sDAgBkC,EAhBlC;;AAAA,2CAiBsB,EAjBtB;;AAAA,8CAkB2B,KAlB3B;;AAAA,gDAmB4B,CAnB5B;;AAAA,gDAoB0B,IApB1B;AAAA;;AAyBIiB,QAAAA,KAAK,GACL;AACI,cAAIC,SAAS,GAAG,EAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBf,WAAvB,EAAoCgB,KAApC,GAA4C,GAA/C,CAAhB;AACA,cAAIC,SAAe,GAAK,EAAE,KAAKH,IAAL,CAAUC,YAAV,CAAuBf,WAAvB,EAAoCkB,MAApC,GAA6C,IAA/C,CAAxB;AACA,cAAIC,QAAe,GAAG,IAAtB;;AAEA,eAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,IAAE,CAAf,EAAiBA,CAAC,EAAlB,EACA;AACI,iBAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,IAAE,CAAf,EAAiBA,CAAC,EAAlB,EACA;AACIF,cAAAA,QAAQ,GAAGpB,WAAW,CAAC,KAAKuB,qBAAN,CAAtB;AACA,mBAAKR,IAAL,CAAUS,QAAV,CAAmBJ,QAAnB;AACAA,cAAAA,QAAQ,CAACK,WAAT,CAAqBX,SAArB,EAA+BI,SAA/B,EAAyC,CAAzC;;AACA,kBAAGI,CAAC,GAAC,CAAF,IAAK,CAAR,EACA;AACIR,gBAAAA,SAAS,GAAGA,SAAS,GAAG,GAAxB;AACAI,gBAAAA,SAAS,GAAGA,SAAS,GAAG,EAAxB;AACH,eAJD,MAMIA,SAAS,GAAGA,SAAS,GAAG,GAAxB;;AACJ,mBAAKQ,kBAAL,CAAwBC,IAAxB,CAA6BP,QAA7B;AACH;AACH;;AACD,eAAKQ,YAAL;AACA,eAAKC,cAAL;AACJ;;AAGDD,QAAAA,YAAY,GACZ;AACI,cAAIE,OAAa,GAAG;AAAA;AAAA,0CAAYC,WAAZ,GAA0BC,eAA1B,EAApB;AACA,cAAIZ,QAAe,GAAE,IAArB;AACA,eAAKa,YAAL,GAAoBjC,WAAW,CAAC,KAAKkC,aAAN,CAA/B;AACA,eAAKnB,IAAL,CAAUS,QAAV,CAAmB,KAAKS,YAAxB;AACA,eAAKA,YAAL,CAAkBE,MAAlB,GAA2B,KAA3B;;AAEA,eAAI,IAAId,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACS,OAAO,CAACM,MAAtB,EAA6Bf,CAAC,EAA9B,EACA;AACID,YAAAA,QAAQ,GAAGpB,WAAW,CAAC,KAAKkC,aAAN,CAAtB;AACA,iBAAKG,aAAL,CAAmBb,QAAnB,CAA4BJ,QAA5B;AACAA,YAAAA,QAAQ,CAACJ,YAAT,CAAsBZ,MAAtB,EAA8BkC,WAA9B,GAA4CR,OAAO,CAACT,CAAD,CAAnD;AACA,iBAAKS,OAAL,CAAaH,IAAb,CAAkBP,QAAlB;AACH;AAEJ;;AAGDmB,QAAAA,UAAU,CAACC,KAAD,EACV;AACI,eAAKzB,IAAL,CAAUoB,MAAV,GAAmB,CAAC,KAAKpB,IAAL,CAAUoB,MAA9B;AACH;;AAEDN,QAAAA,cAAc,GACd;AACI1B,UAAAA,KAAK,CAACsC,EAAN,CAASvC,KAAK,CAACwC,SAAN,CAAgBC,WAAzB,EAAsC,KAAKC,YAA3C,EAAyD,IAAzD;AACAzC,UAAAA,KAAK,CAACsC,EAAN,CAASvC,KAAK,CAACwC,SAAN,CAAgBG,UAAzB,EAAqC,KAAKC,WAA1C,EAAsD,IAAtD;AACA3C,UAAAA,KAAK,CAACsC,EAAN,CAASvC,KAAK,CAACwC,SAAN,CAAgBK,SAAzB,EAAmC,KAAKC,UAAxC,EAAoD,IAApD;AACH;;AAEDJ,QAAAA,YAAY,CAACJ,KAAD,EACZ;AACQ,eAAI,IAAInB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,KAAKS,OAAL,CAAaM,MAA5B,EAAmCf,CAAC,EAApC,EACA;AAEI,gBAAI,KAAKS,OAAL,CAAaT,CAAb,EAAgBL,YAAhB,CAA6Bf,WAA7B,EAA0CgD,qBAA1C,GAAkEC,QAAlE,CAA2E7C,EAAE,CAACmC,KAAK,CAACW,aAAN,GAAsBC,CAAvB,EAA0BZ,KAAK,CAACW,aAAN,GAAsBE,CAAhD,CAA7E,CAAJ,EACA;AAEI;AACA;AACA;AACA,kBAAIC,OAAc,GAAG,KAAKvC,IAAL,CAAUC,YAAV,CAAuBf,WAAvB,EAAoCsD,oBAApC,CAAyD,IAAIjD,IAAJ,CAASkC,KAAK,CAACW,aAAN,GAAsBC,CAA/B,EAAiCZ,KAAK,CAACW,aAAN,GAAsBE,CAAvD,EAAyD,CAAzD,CAAzD,CAArB;AACA,mBAAKvB,OAAL,CAAaT,CAAb,EAAgBI,WAAhB,CAA4B6B,OAA5B;AAEA,mBAAKxB,OAAL,CAAaT,CAAb,EAAgBmC,MAAhB,GAAyB,KAAKzC,IAA9B,CARJ,CAUI;;AACA,mBAAK0C,YAAL,GAAoBpC,CAApB;AACA,mBAAKqC,UAAL,GAAkB,IAAlB;AACH;AACR;AAEJ;;AACDC,QAAAA,mBAAmB,CAACL,OAAD,EACnB;AACI,cAAG,KAAKI,UAAR,EACA;AACI,iBAAK5B,OAAL,CAAa,KAAK2B,YAAlB,EAAgChC,WAAhC,CAA4C6B,OAA5C;AAEH;AAEJ;;AAEDR,QAAAA,WAAW,CAACN,KAAD,EACX;AAEQ,cAAIc,OAAc,GAAG,KAAKvC,IAAL,CAAUC,YAAV,CAAuBf,WAAvB,EAAoCsD,oBAApC,CAAyD,IAAIjD,IAAJ,CAASkC,KAAK,CAACW,aAAN,GAAsBC,CAA/B,EAAiCZ,KAAK,CAACW,aAAN,GAAsBE,CAAvD,EAAyD,CAAzD,CAAzD,CAArB;AACA,eAAKM,mBAAL,CAAyBL,OAAzB;AACP;;AAEDN,QAAAA,UAAU,GACV;AACI,cAAIY,MAAgB,GAAG,KAAvB;;AACA,eAAI,IAAIvC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,KAAKK,kBAAL,CAAwBU,MAAvC,EAA8Cf,CAAC,EAA/C,EACA;AAAA;;AACIuC,YAAAA,MAAM,GAAIrD,cAAc,CAACsD,QAAf,0BAAyB,KAAK/B,OAAL,CAAa,KAAK2B,YAAlB,EAAgCK,cAAhC,CAA+C,SAA/C,EAA0D9C,YAA1D,CAAuEf,WAAvE,CAAzB,0DAAyB,sBAAqFgD,qBAArF,EAAzB,2BAAsI,KAAKvB,kBAAL,CAAwBL,CAAxB,EAA2ByC,cAA3B,CAA0C,SAA1C,EAAqD9C,YAArD,CAAkEf,WAAlE,CAAtI,0DAAsI,sBAAgFgD,qBAAhF,EAAtI,CAAV;;AACA,gBAAGW,MAAH,EACA;AACI,kBAAIG,GAAU,GAAG,KAAKrC,kBAAL,CAAwBL,CAAxB,EAA2B2C,WAA3B,EAAjB;AACAD,cAAAA,GAAG,CAACV,CAAJ,GAAQU,GAAG,CAACV,CAAJ,GAAS,KAAKvB,OAAL,CAAa,KAAK2B,YAAlB,EAAgCzC,YAAhC,CAA6Cf,WAA7C,EAA0DkB,MAA1D,GAAiE,CAAlF;AACA,mBAAKW,OAAL,CAAa,KAAK2B,YAAlB,EAAgChC,WAAhC,CAA4CsC,GAA5C;AACA;AAEH;AAEJ;;AACD,cAAG,CAACH,MAAJ,EACA;AACI,iBAAK9B,OAAL,CAAa,KAAK2B,YAAlB,EAAgCD,MAAhC,GAAyC,KAAKnB,aAA9C;AAEH;AAIJ,SApJL,CAsJI;AACA;AACA;;;AAxJJ,O;;;;;iBAGsB,C;;;;;;;iBAGe,I;;;;;;;iBAGR,I;;;;;;;iBAGF,I;;;AA+I3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport { _decorator, Component, Node, Prefab, CCInteger, instantiate, UITransform, systemEvent, Input, input, TweenSystem, Sprite, v2, BoxCollider, Vec3, Intersection2D } from 'cc';\nimport { TeamManager } from '../GameManager/TeamManager';\n\nconst { ccclass, property } = _decorator;\n\n/**\n * Predefined variables\n * Name = TeamSelection\n * DateTime = Thu Mar 24 2022 17:03:51 GMT+0530 (India Standard Time)\n * Author = chandanKrishnani\n * FileBasename = TeamSelection.ts\n * FileBasenameNoExtension = TeamSelection\n * URL = db://assets/Script/Home/Dragons/TeamSelection.ts\n * ManualUrl = https://docs.cocos.com/creator/3.4/manual/en/\n *\n */\n \n@ccclass('TeamSelection')\nexport class TeamSelection extends Component \n{\n    \n    @property({type : CCInteger})\n    DragonPositions = 7;\n\n    @property({type : Prefab})\n    DragonSelectionPrefab : Prefab = null;\n\n    @property({type : Prefab})\n    DragonsPrefab : Prefab = null;\n\n    @property({type : Node})\n    DragonsParent : Node = null;\n\n\n\n    DragonPositionNode : Node[] = [];\n    dragons: Node[] = [];\n    dragonMove : boolean = false;\n    targetDragon : number = 0;\n    DragableNode : Node = null;\n\n\n    \n\n    start() \n    {\n        let startXpos = - (this.node.getComponent(UITransform).width * 0.1);\n        let startYpos : any  =  -(this.node.getComponent(UITransform).height * 0.33);\n        let tempNode : Node = null;\n\n        for(let i=1;i<=3;i++)\n        {\n            for(let j=1;j<=3;j++)   \n            {\n                tempNode = instantiate(this.DragonSelectionPrefab);\n                this.node.addChild(tempNode);\n                tempNode.setPosition(startXpos,startYpos,1);\n                if(j%2!=0)\n                {\n                    startXpos = startXpos - 120;\n                    startYpos = startYpos + 80;\n                }\n                else\n                    startYpos = startYpos - 160;\n                this.DragonPositionNode.push(tempNode);\n            }\n         }\n         this.setUpDragons();\n         this.setTouchEvents();\n    }\n\n\n    setUpDragons()\n    {\n        let dragons : any = TeamManager.getInstance().getDragonImages();\n        var tempNode : Node= null;\n        this.DragableNode = instantiate(this.DragonsPrefab);\n        this.node.addChild(this.DragableNode);\n        this.DragableNode.active = false;\n\n        for(let i=0;i<dragons.length;i++)\n        {\n            tempNode = instantiate(this.DragonsPrefab);\n            this.DragonsParent.addChild(tempNode);\n            tempNode.getComponent(Sprite).spriteFrame = dragons[i];\n            this.dragons.push(tempNode);\n        }\n    \n    }\n\n\n    backButton(event : any)\n    {\n        this.node.active = !this.node.active;\n    }\n\n    setTouchEvents() : void\n    {\n        input.on(Input.EventType.TOUCH_START, this.onTouchStart, this);\n        input.on(Input.EventType.TOUCH_MOVE, this.onTouchMove,this);\n        input.on(Input.EventType.TOUCH_END,this.onTouchEnd, this);\n    }\n\n    onTouchStart(event : any)\n    {\n            for(let i=0; i<this.dragons.length;i++)\n            {\n\n                if (this.dragons[i].getComponent(UITransform).getBoundingBoxToWorld().contains(v2(event.getUILocation().x, event.getUILocation().y))) \n                {\n                    \n                    // this.DragableNode.active = true;\n                    // this.DragableNode.getComponent(Sprite).spriteFrame = this.dragons[i].getComponent(Sprite).spriteFrame;\n                    // this.DragableNode.setPosition(event.getUILocation());\n                    let current : Vec3 = this.node.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(event.getUILocation().x,event.getUILocation().y,1));\n                    this.dragons[i].setPosition(current);\n                    \n                    this.dragons[i].parent = this.node;\n                    \n                    // this.dragons[i].active = false;\n                    this.targetDragon = i;\n                    this.dragonMove = true;\n                }\n        }\n        \n    }\n    planevalidMoveCheck(current : any) :void\n    {        \n        if(this.dragonMove)\n        {        \n            this.dragons[this.targetDragon].setPosition(current);\n          \n        }\n\n    }\n\n    onTouchMove(event: any)\n    {   \n\n            let current : Vec3 = this.node.getComponent(UITransform).convertToNodeSpaceAR(new Vec3(event.getUILocation().x,event.getUILocation().y,1));\n            this.planevalidMoveCheck(current);  \n    }\n  \n    onTouchEnd()\n    {  \n        var colide : boolean = false;\n        for(let i=0; i<this.DragonPositionNode.length;i++)  \n        {\n            colide =  Intersection2D.rectRect( this.dragons[this.targetDragon].getChildByName('Colider').getComponent(UITransform)?.getBoundingBoxToWorld(),this.DragonPositionNode[i].getChildByName('colider').getComponent(UITransform)?.getBoundingBoxToWorld());\n            if(colide)\n            {\n                let pos : Vec3 = this.DragonPositionNode[i].getPosition();\n                pos.y = pos.y +  this.dragons[this.targetDragon].getComponent(UITransform).height/2;                \n                this.dragons[this.targetDragon].setPosition(pos);\n                break;\n\n            }\n                \n        }\n        if(!colide)\n        {\n            this.dragons[this.targetDragon].parent = this.DragonsParent;   \n\n        }\n\n        \n        \n    }\n\n    // update (deltaTime: number) {\n    //     // [4]\n    // }\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/en/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/en/scripting/decorator.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/en/scripting/life-cycle-callbacks.html\n */\n"]}